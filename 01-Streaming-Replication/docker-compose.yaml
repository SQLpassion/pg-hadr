services:
  pg1:
    image: postgres:latest
    container_name: pg1
    hostname: pg1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: passw0rd1!
      POSTGRES_DB: appdb
      PGPASSWORD: passw0rd1!
    volumes:
      - pg1_data:/var/lib/postgresql/data
      - ./conf/pg_hba.conf:/etc/postgresql/pg_hba.conf
      - ./init/primary-init.sql:/docker-entrypoint-initdb.d/primary-init.sql
    ports:
      - "5441:5432"
    command: -c hba_file=/etc/postgresql/pg_hba.conf -c wal_keep_size=512
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  pg2:
    image: postgres:latest
    container_name: pg2
    hostname: pg2
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: passw0rd1!
      POSTGRES_DB: appdb
      PGPASSWORD: passw0rd1!
      SLOT_NAME: pg2
      POSTGRES_START_COMMAND: "echo 'Skipping automatic PostgreSQL start'"
    volumes:
      - pg2_data:/var/lib/postgresql/data
      - ./conf/pg_hba.conf:/etc/postgresql/pg_hba.conf
      - ./init/replica-init.sh:/docker-entrypoint-initdb.d/replica-init.sh
    ports:
      - "5442:5432"
    command: -c hba_file=/etc/postgresql/pg_hba.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    depends_on:
      pg1:
        condition: service_healthy

  pg3:
    image: postgres:latest
    container_name: pg3
    hostname: pg3
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: passw0rd1!
      POSTGRES_DB: appdb
      PGPASSWORD: passw0rd1!
      SLOT_NAME: pg3
      POSTGRES_START_COMMAND: "echo 'Skipping automatic PostgreSQL start'"
    volumes:
      - pg3_data:/var/lib/postgresql/data
      - ./conf/pg_hba.conf:/etc/postgresql/pg_hba.conf
      - ./init/replica-init.sh:/docker-entrypoint-initdb.d/replica-init.sh
    ports:
      - "5443:5432"
    command: -c hba_file=/etc/postgresql/pg_hba.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    depends_on:
      pg1:
        condition: service_healthy

  pg4:
    image: postgres:latest
    container_name: pg4
    hostname: pg4
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: passw0rd1!
      POSTGRES_DB: appdb
      PGPASSWORD: passw0rd1!
      SLOT_NAME: pg4
      POSTGRES_START_COMMAND: "echo 'Skipping automatic PostgreSQL start'"
    volumes:
      - pg4_data:/var/lib/postgresql/data
      - ./conf/pg_hba.conf:/etc/postgresql/pg_hba.conf
      - ./init/replica-init.sh:/docker-entrypoint-initdb.d/replica-init.sh
    ports:
      - "5444:5432"
    command: -c hba_file=/etc/postgresql/pg_hba.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    depends_on:
      pg1:
        condition: service_healthy

volumes:
  pg1_data:
  pg2_data:
  pg3_data:
  pg4_data: